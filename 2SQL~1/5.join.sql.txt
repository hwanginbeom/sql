-- 5.join.sql

/*
1. 조인이란?
	다수의 table간에  공통된 데이터를 기준으로 검색하는 명령어


2. 사용 table 
	1. emp & dept 
	  : deptno 컬럼을 기준으로 연관되어 있음

	 2. emp & salgrade
	  : sal 컬럼을 기준으로 연관되어 있음


3. table에 별칭 사용 
	

4. 조인 종류 
	1. 동등 조인
		 = 동등비교 연산자 사용
		 : 사용 빈도 가장 높음
		 : 테이블에서 같은 조건이 존재할 경우의 값 검색 

	2. not-equi 조인
		: 100% 일치하지 않고 특정 범위내의 데이터 조인시에 사용
		: between ~ and(비교 연산자)

	3. self 조인 
		: 동일 테이블 내에서 진행되는 조인
		: 동일 테이블 내에서 상이한 칼럼 참조
			emp의 empno[사번]과 mgr[사번] 관계

	4. outer 조인 
		: 검색되지 않는 문제를 해결하기 위해 사용되는 조인
		  null 값이기 때문에 배제된 행을 결과에 함께 검색하기 위한 조인
		
		: oracle DB의 sql인 경우 데이터가 null 쪽 table 에 + 기호 표기 */

-- 1. dept table의 구조 검색
desc dept;
-- dept table의 모든 데이터 검색
select * from dept;



--*** 1. 동등 조인 ***

-- 2. SMITH 의 이름, 사번, 근무지역(부서위치) 정보를 검색






-- 3. deptno가 동일한 모든 데이터 검색



-- 4. 2+3 번 항목 결합해서 SMITH에 대한 모든 정보 검색하기


-- 5.  SMITH에 대한 이름(ename)과 부서번호(deptno), 부서명(dept의 dname) 검색하기



-- 6. 조인을 사용해서 뉴욕에 근무하는 사원의 이름과 급여를 검색 
-- loc='NEW YORK', ename, sal




-- 7. 조인 사용해서 ACCOUNTING 부서(dname)에 소속된 사원의 이름과 입사일 검색



-- 8. 직급이 MANAGER인 사원의 이름, 부서명 검색



-- *** 2. not-equi 조인 ***

-- salgrade table(급여 등급 관련 table)
-- 9. 사원의 급여가 몇 등급인지 검색
-- between ~ and 



--? 등급이 3등급인 사원들의 이름과 급여 검색



-- 10. 사원(emp) 테이블의 부서 번호(deptno)로 부서 테이블을 참조하여 사원명, 부서번호, 부서의 이름(dname) 검색




-- *** 3. self 조인 ***

-- 11. SMITH 직원의 메니저 이름 검색
-- 직원 table : emp e[ename, empno, mgr]
-- 메니저 table : emp m[empno, ename]



--12. 메니저가 KING인 사원들의 이름과 직급 검색
-- m : ename = 'KING'
-- e : ename, job



--13. SMITH와 동일한 근무지에서 근무하는 사원의 이름 검색
--SMITH 데이터 절대 검색 불가
-- SMITH동일 근무지 - deptno로 검색
-- deptno가 일치되는 사원의 이름 -  ename




--*** 4. outer join ***
-- 14. 모든 사원명, 메니저 명 검색, 단 메니저가 없는 사원도 검색되어야 함
-- null값을 포함한 검색도 반드시 필수



-- 15. 모든 직원명, 부서번호, 부서명 검색
-- 부서 테이블의 40번 부서와 조인할 사원 테이블의 분서 번호가 없지만,
-- outer join이용해서 40번 부서의 부서 이름도 검색하기 




